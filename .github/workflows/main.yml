# This is a basic workflow to help you get started with Actions

name: Search Statespace

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
    - 'search/**'

env:
  uuid : $GITHUB_SHA
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      
      - name: Run a multi-line script
        run: |
          echo ${GITHUB_SHA}
      
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: execute docker # run the run.py to get the latest data
        run: |
          docker build model/ --build-arg VAR_A=${{env.uuid}} -t hirzeman/model:${{env.uuid}}
          docker push hirzeman/model:${{env.uuid}}

      - name: execute py script # run the run.py to get the latest data
        run: |
          python -m pip install pika
          python submit.py ${{env.uuid}}

      - name: ops
        uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          add: '.'

          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: ML OPS Bot

          # The email of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          # author_email: mail@example.com

          # The name of the branch to use, if different from the one that triggered the workflow.
          # Default: the branch that triggered the run
          branch: observer

          # How the action should behave when the targeted branch is missing: "create" will create a new one on the remote, "throw" will exit
          # Default: throw
          branch_mode: create

          # The name of the custom committer you want to use, if different from the author of the commit.
          # Default: the name of the author (set with either author_name or default_author)
          # committer_name: Committer Name

          # The email of the custom committer you want to use, if different from the author of the commit.
          # Default: the email of the author (set with either author_email or default_author)
          # committer_email: mail@example.com

          # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
          # Default: '.'
          cwd: '.'

          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: github_actor

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'Your commit message'

          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: ignore

          # Arguments for the git pull command. Use NO-PULL to avoid the action pulling at all.
          # Default: '--no-rebase'
          pull: 'origin observer --no-rebase'

          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # Default: true
          push: true

          # The arguments for the `git rm` command (see the paragraph below for more info)
          # Default: ''
          # remove: './dir/old_file.js'

          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
          # Default: ''
          tag: 'v1.0.0 --force'



            # Runs a set of commands using the runners shell
                
